# Generated by Django 3.0.8 on 2020-07-22 17:12

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_id', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=150, null=True)),
                ('country_id', models.IntegerField(blank=True, null=True)),
                ('county', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('street_no', models.IntegerField(blank=True, null=True)),
                ('zip_code', models.IntegerField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('long', models.FloatField(blank=True, null=True)),
                ('address_string', models.CharField(blank=True, max_length=255, null=True)),
                ('company_location', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='AuctionRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auction_room_id', models.IntegerField(blank=True, null=True)),
                ('creation_date', models.DateField(default=datetime.date.today)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_visible', models.BooleanField(blank=True, null=True)),
                ('is_open', models.BooleanField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auction_rooms',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.IntegerField(blank=True, null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('vat_id', models.CharField(blank=True, max_length=150, null=True)),
                ('is_supplier', models.BooleanField(blank=True, null=True)),
                ('is_client', models.BooleanField(blank=True, null=True)),
                ('adress', models.CharField(blank=True, max_length=255, null=True)),
                ('country_id', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=150, null=True)),
                ('registration_number', models.IntegerField(blank=True, null=True)),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='TransportOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transport_order_id', models.IntegerField(blank=True, null=True)),
                ('pickup_from', models.DateField(default=datetime.date.today, verbose_name='pickup from date')),
                ('pickup_until', models.DateField(default=datetime.date.today, verbose_name='pickup until date')),
                ('delivery_from', models.DateField(default=datetime.date.today, verbose_name='delivery from date')),
                ('delivery_until', models.DateField(default=datetime.date.today, verbose_name='delivery until date')),
                ('price', models.FloatField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, max_length=3, null=True)),
                ('pallets', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('ldm', models.FloatField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=10, null=True)),
                ('auction_room_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.AuctionRoom')),
                ('delivery_address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_address', to='server.Address')),
                ('pickup_address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pickup_address', to='server.Address')),
                ('supplier_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='server.Company')),
                ('supplier_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplier_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'transport_orders',
            },
        ),
        migrations.AddField(
            model_name='auctionroom',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.Company'),
        ),
        migrations.AddField(
            model_name='auctionroom',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
